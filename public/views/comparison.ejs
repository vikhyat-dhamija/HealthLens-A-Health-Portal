<!DOCTYPE html>
<head>
    <script src="https://kit.fontawesome.com/221ff96759.js" crossorigin="anonymous"></script>
    <!-- Include Plotly.js --><script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<style>
.card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        width: 300px;
        margin: auto;
        text-align: center;
      }

input[type=submit] {
  width: 100%;
  background-color: #007bff;
  color: white;
  padding: 14px 20px;
  margin: 8px 8px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

body {
    font-family: 'Open Sans';font-size: 22px;
}


.text {
  background-color: white;
  color: black;
  font-size: 20px; /* Responsive font size */
  font-weight: bold;
  margin: 0 auto; /* Center the text container */
  padding: 10px;
  width: 50%;
  text-align: center; /* Center text */
  position: absolute; /* Position text */
  top: 50%; /* Position text in the middle */
  left: 50%; /* Position text in the middle */
  transform: translate(-50%, -50%); /* Position text in the middle */
  mix-blend-mode: screen; /* This makes the cutout text possible */
}


.title {
        color: grey;
        font-size: 22px;
}

.row-m-t{
  margin-top : 50px
} 


</style>


</head>

<body style="background-color:white;">

  
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script src="https://http://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>    

</script>

  <div class="row">
  <div class="col-lg-12">
     <nav class="navbar navbar-expand-lg navbar-dark bg-primary" >
         <ul class="navbar-nav mr-auto">
            <li class="nav-item" class="nav justify-content-end">   
                <a class="navbar-brand" href="#">Health Lens</a>
                </li>

                <li class="nav-item" class="nav justify-content-end" float='right'> 
                  <form class="form-inline my-2 my-lg-0" >
                   <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                   <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                  </form>
                  </li>
          </ul>
        <% var username %>
        <ul class="navbar-nav ml-auto"> 
          
         <li>
          <span style="float:right"><i class="fas fa-user fa-2x"></i>
            <label id="user_name" value='<%= username %>'><%= username %></label>
          </li>
          <li>
         <input type="button" id="log_out" name="log_out" value="LogOut" class="btn btn-primary" > </input></span>
          </li>
        
        </ul>
      </div>
    </nav>
  </div>
  <div style="width: 30px"></div>
  <div class="row row-m-t">
    <div class="col-lg-1" >
        
    </div>
    <div class="card"><div class="col-lg-3" id="bp_sys"> </div> <div class="col-lg-3" id="bp_sys1"></div></div>
    <div class="col-lg-3" ><div class="card"><img src='../images/meter.png' alt="John" style="margin-top:20px;width:70%;height: 60%;position: relative; display: block;margin-left: auto;margin-right: auto">
      <img src='../images/bar.png' alt="John" style="margin-top:120px;width:60%;height: 70%;position: relative; display: block;margin-left: auto;margin-right: auto">
    </div></div>
    <div class="card"><div class="col-lg-3" id="bp_dias"> </div> <div class="col-lg-3" id="bp_dias1"></div></div>    
</div>
<div style="width: 30px"></div>
<div class="row row-m-t">
<div class="col-lg-1" ></div>
<div class="card"><div class="col-lg-3" id="sugar"> </div> <div class="col-lg-3" id="sugar1"></div></div>
<div class="col-lg-3" ><div class="card"><img src='../images/meter.png' alt="John" style="margin-top:20px;width:70%;height: 60%;position: relative; display: block;margin-left: auto;margin-right: auto">
  <img src='../images/bar.png' alt="John" style="margin-top:120px;width:60%;height: 70%;position: relative; display: block;margin-left: auto;margin-right: auto">
</div></div>
<div class="card"><div class="col-lg-3" id="cholestrol"> </div> <div class="col-lg-3" id="cholestrol1"></div></div> 
</div>

<div style="width: 30px"></div>

<div class="row row-m-t">
    <div class="col-lg-1" > </div>
    <div class="card"><div class="col-lg-3" id="uacid"> </div> <div class="col-lg-3" id="uacid1"></div></div>
    <div class="col-lg-3" ><div class="card"><img src='../images/meter.png' alt="John" style="margin-top:20px;width:70%;height: 60%;position: relative; display: block;margin-left: auto;margin-right: auto">
      <img src='../images/bar.png' alt="John" style="margin-top:120px;width:60%;height: 70%;position: relative; display: block;margin-left: auto;margin-right: auto">
    </div></div>
    <div class="card"><div class="col-lg-3" id="bmi"> </div> <div class="col-lg-3" id="bmi1"></div></div>
</div>

</body>
<script
src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.1/mustache.min.js">
</script>

<script
src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js">
</script>

<script
src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.6.0/qs.min.js">
</script>

<script>
 function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}   
var el=document.getElementById('user_name');
var username = (el.innerText || el.textContent);
var token=readCookie('auth'+username);

a_health=document.getElementById('health');

a_cpmparison=document.getElementById('comparison');

a_useful=document.getElementById('useful');


document.querySelector('#log_out').addEventListener('click',()=>{


document.location.assign('/sign_out/'+token)

})

var layout2
var trace1

window.onload=function(){

fetch('/comparedata2/'+token).then(response => response.json()).then((data)=> 
{
    var bp_sys_q={
    type: "indicator",
    mode: "gauge+number",
    title: { text: "BP Systolic", font: { size: 24 } },
    gauge: {
      axis: { range: [50, 250], tickwidth: 1, tickcolor: "blue" },
      bar: { color: "blue" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "white",
      steps: [
        { range: [50, 110], color: "orange" },
        { range: [110, 130], color: "green" },
        { range: [130, 250], color: "orange" }
      ]
    }
  }

  
  var bp_dias_q={
    type: "indicator",
    mode: "gauge+number",
    title: { text: "BP Diastolic", font: { size: 24 } },
    gauge: {
      axis: { range: [30, 150], tickwidth: 1, tickcolor: "blue" },
      bar: { color: "blue" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "white",
      steps: [
        { range: [30, 70], color: "orange" },
        { range: [70, 85], color: "green" },
        { range: [85, 150], color: "orange" }
      ]
    }
  }

  var sugar_q={
    type: "indicator",
    mode: "gauge+number",
    title: { text: "Sugar", font: { size: 24 } },
    gauge: {
      axis: { range: [30, 500], tickwidth: 1, tickcolor: "blue" },
      bar: { color: "blue" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "white",
      steps: [
        { range: [30, 100], color: "orange" },
        { range: [100,150], color: "green" },
        { range: [150, 500], color: "orange" }
      ]
    }
  }

  
  var cholestrol_q={
    type: "indicator",
    mode: "gauge+number",
    title: { text: "Cholestrol", font: { size: 24 } },
    gauge: {
      axis: { range: [10, 700], tickwidth: 1, tickcolor: "blue" },
      bar: { color: "blue" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "white",
      steps: [
        { range: [10, 100], color: "orange" },
        { range: [100,200], color: "green" },
        { range: [200, 700], color: "orange" }
      ]
    }
  }

  var uacid_q={
    type: "indicator",
    mode: "gauge+number",
    title: { text: "Uric Acid", font: { size: 24 } },
    gauge: {
      axis: { range: [2, 10], tickwidth: 1, tickcolor: "blue" },
      bar: { color: "darkblue" },
      bgcolor: "white",
      borderwidth: 2,
      bordercolor: "white",
      steps: [
        { range: [2, 3], color: "orange" },
        { range: [3,6], color: "green" },
        { range: [6, 10], color: "orange" }
      ]
    }
  }

var layout = {
  width: 280,
  height: 250,
  margin: { t: 25, r: 25, l: 25, b: 25 },
  paper_bgcolor: "white",
  font: { color: "black", family: "Arial" }
};

var bp_sys = document.getElementById('bp_sys');
var bp_dias = document.getElementById('bp_dias');
var sugar = document.getElementById('sugar');
var cholestrol=document.getElementById('cholestrol');
var uacid=document.getElementById('uacid');

var bp_sys1 = document.getElementById('bp_sys1');
var bp_dias1 = document.getElementById('bp_dias1');
var sugar1 = document.getElementById('sugar1');
var cholestrol1=document.getElementById('cholestrol1');
var uacid1=document.getElementById('uacid1');


  


//First range wise data

if(data.u_data == null)   
{


}
else
{

//if data is not null there is an average Data 
bp_sys_q["value"]=parseFloat(data.u_data.avg_bp_sys).toFixed(2)
Plotly.newPlot('bp_sys', [bp_sys_q], layout);

//Plotting the gauge charts for all the parameters
bp_dias_q["value"]=parseFloat(data.u_data.avg_bp_dias).toFixed(2)
Plotly.newPlot('bp_dias', [bp_dias_q], layout);

sugar_q["value"]=parseFloat(data.u_data.avg_sugar).toFixed(2)
Plotly.newPlot('sugar', [sugar_q], layout);

cholestrol_q["value"]=parseFloat(data.u_data.avg_cholestrol).toFixed(2)
Plotly.newPlot('cholestrol', [cholestrol_q], layout);


uacid_q["value"]=parseFloat(data.u_data.avg_uacid).toFixed(2)
Plotly.newPlot('uacid', [uacid_q], layout);

}

})

//Then comparison of the averages
fetch('/comparedata1/'+token).then(response => response.json()).then((data)=> 
{
    

     layout2 = {
  font:{
    family: 'Raleway, sans-serif'
  },
  showlegend: true,
  xaxis: {
    tickangle: -45
  },
  yaxis: {
    zeroline: false
  },
  bargap :0.5,
  width: 280,
  height: 250,
};

 trace1 = {type: 'bar', textposition: 'auto', hoverinfo: 'none',marker: { color: 'orange', opacity: 1, line: { color: 'rgb(8,48,107)', width: 1.5 }}}; 
 trace2 = {type: 'bar', textposition: 'auto', hoverinfo: 'none',marker: { color: 'orange', opacity: 1, line: { color: 'rgb(8,48,107)', width: 1.5 }}};   
 trace3 = {type: 'bar', textposition: 'auto', hoverinfo: 'none',marker: { color: 'orange', opacity: 1, line: { color: 'rgb(8,48,107)', width: 1.5 }}};
 trace4 = {type: 'bar', textposition: 'auto', hoverinfo: 'none',marker: { color: 'orange', opacity: 1, line: { color: 'rgb(8,48,107)', width: 1.5 }}};
 trace5 = {type: 'bar', textposition: 'auto', hoverinfo: 'none',marker: { color: 'orange', opacity: 1, line: { color: 'rgb(8,48,107)', width: 1.5 }}};
 if(data.u_data == null)   
 {


 }
else
    {
      
        layout2["title"]="Your Avg. Vs. Overall Average"
        trace1["x"]=['Your Average','Overall Average']
        trace1["y"]=[(parseFloat(data.u_data.avg_bp_sys).toFixed(2)),(parseFloat(data.o_data.avg_bp_sys).toFixed(2))]
        trace1["text"]=[(parseFloat(data.u_data.avg_bp_sys).toFixed(2)),(parseFloat(data.o_data.avg_bp_sys).toFixed(2))].map(String)
        Plotly.newPlot('bp_sys1', [trace1], layout2);
      
        layout2["title"]="Your Avg. BP Dias Vs. Overall Average"
        trace2["x"]=['Your Average','Overall Average']
        trace2["y"]=[(parseFloat(data.u_data.avg_bp_dias).toFixed(2)),parseFloat(data.o_data.avg_bp_dias).toFixed(2)]
        trace2["text"]=[(parseFloat(data.u_data.avg_bp_dias).toFixed(2)),parseFloat(data.o_data.avg_bp_dias).toFixed(2)].map(String)
        Plotly.newPlot('bp_dias1', [trace2], layout2);     
     
        layout2["title"]="Your Avg. Sugar Vs. Overall Average"
        trace3["x"]=['Your Average','Overall Average']
        trace3["y"]=[parseFloat(data.u_data.avg_sugar).toFixed(2),parseFloat(data.o_data.avg_sugar).toFixed(2)]
        trace3["text"]=[parseFloat(data.u_data.avg_sugar).toFixed(2),parseFloat(data.o_data.avg_sugar).toFixed(2)].map(String)
        Plotly.newPlot('sugar1', [trace3], layout2);     
      
        layout2["title"]="Your Avg. Cholestrol Vs. Overall Average"
        trace4["x"]=['Your Average','Overall Average']
        trace4["y"]=[parseFloat(data.u_data.avg_cholestrol).toFixed(2),parseFloat(data.o_data.avg_cholestrol).toFixed(2)]
        trace4["text"]=[parseFloat(data.u_data.avg_cholestrol).toFixed(2),parseFloat(data.o_data.avg_cholestrol).toFixed(2)].map(String)
        Plotly.newPlot('cholestrol1', [trace4], layout2);     
      
        layout2["title"]="Your Avg. UAcid Vs. Overall Average"
        trace5["x"]=['Your Average','Overall Average']
        trace5["y"]=[parseFloat(data.u_data.avg_uacid).toFixed(2),parseFloat(data.o_data.avg_uacid).toFixed(2)]
        trace5["text"]=[parseFloat(data.u_data.avg_uacid).toFixed(2),parseFloat(data.o_data.avg_uacid).toFixed(2)].map(String)
        Plotly.newPlot('uacid1', [trace5], layout2);     

    }


})

}
 
</script>
</body>